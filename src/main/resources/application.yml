server:
  port: 8090

spring:
  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://localhost:3306/my_mybatis?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
      # 配置获取连接等待超时的时间
    maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      #useGlobalDataSourceStat: true



  #    分布式缓存
  cache:
    type: ehcache
    ehcache:
      config: classpath:ehcache.xml
#      热部署
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java
      poll-interval: 3000
      quiet-period: 1000
#      解决重启之后的404错误
  #jpa
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

mybatis:
  mapper-locations: classpath:/Mappers/*.xml
  type-aliases-package: com.example.demo4/po

#分页pageHelper
pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
logging:
  level:
    com:
      example:
        demo4:
          dao: debug



